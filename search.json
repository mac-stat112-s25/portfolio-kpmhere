[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "COMP/STAT112 Notebook",
    "section": "",
    "text": "Welcome\nWelcome to my online portfolio for COMP/STAT112 course taken at Macalester College. Please, use the side bar on the left for navigation.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "bw/bw-uni.html",
    "href": "bw/bw-uni.html",
    "title": "\n1  Univariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking univariate visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\n2 Effective Visualization Checklist\n\n\nEffective? right for data, clear purpose, unbiased, not misleading\n\nComplete? title, subtitle, axis & legend labels, caption, data annotation\n\nAccessible? color-blind safe palette, alt text, readable text size\n\n\n3 1. Univariate Visualization\nResearch Question: What is the distribution of life expectancy across countries in 2007?\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(gapminder)\nlibrary(viridis)\n\nLoading required package: viridisLite\n\nlife2007 &lt;- gapminder %&gt;% filter(year == 2007)\n\nggplot(life2007, aes(x = lifeExp)) +\n  geom_histogram(bins = 30, fill = viridis(1), color = \"white\") +\n  labs(\n    title    = \"Life Expectancy Distribution (2007)\",\n    subtitle = \"Gapminder data: Each bar = Number of countries\",\n    x        = \"Life Expectancy (years)\",\n    y        = \"Number of Countries\",\n    caption  = \"Source: gapminder package\"\n  ) +\n  theme_minimal(base_size = 14)\n\n\n\nDistribution of Life Expectancy among Countries in 2007\n\n\n\nSummary: In 2007, life expectancy across countries shows a roughly bell-shaped distribution centered around 70–75 years. A small left tail contains nations with lower health outcomes (around 45–60 years), while a right tail extends toward very high values (above 80 years), reflecting developed nations with excellent healthcare. The median is slightly higher than the mean, indicating a mild left skew driven by a handful of low‑life‑expectancy countries.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-bi.html",
    "href": "bw/bw-bi.html",
    "title": "\n2  Bivariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking bivariate visualization. The visualization will not perfect the first time but you are expected to improve it throughout the semester especially after covering advanced topics such as effective viz.\n\n3 Effective Visualization Checklist\n\n\nEffective? right for data, clear purpose, unbiased, not misleading\n\nComplete? title, subtitle, axis & legend labels, caption, data annotation\n\nAccessible? color-blind safe palette, alt text, readable text size\n\n\n4 2. Bivariate Visualization\nResearch Question: How does engine displacement relate to highway fuel efficiency in cars?\n\nlibrary(ggplot2)\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point(alpha = 0.6, color = \"#1b9e77\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\") +\n  labs(\n    title    = \"Engine Displacement vs Highway MPG\",\n    subtitle = \"mpg dataset from ggplot2\",\n    x        = \"Engine Displacement (liters)\",\n    y        = \"Highway MPG\",\n    caption  = \"Source: ggplot2::mpg\"\n  ) +\n  theme_minimal(base_size = 14)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nEngine Displacement vs Highway MPG with Trend Line\n\n\n\nSummary: There is a strong negative linear relationship: each additional liter of engine displacement corresponds to approximately a 5‑8 MPG drop on the highway. Small‑engine cars (1–2 L) cluster around 25–40 MPG, while large V6/V8 engines (3–6 L) mostly fall below 25 MPG. A few outliers—performance or hybrid vehicles—show higher efficiency or atypical displacement.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-tri.html",
    "href": "bw/bw-tri.html",
    "title": "\n3  Trivariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking trivariate visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\n4 Effective Visualization Checklist\n\n\nEffective? right for data, clear purpose, unbiased, not misleading\n\nComplete? title, subtitle, axis & legend labels, caption, data annotation\n\nAccessible? color-blind safe palette, alt text, readable text size\n\n5 3. Trivariate Visualization\nResearch Question: Does the displacement–MPG relationship differ by drive type?\n\nlibrary(ggplot2)\nggplot(mpg, aes(x = displ, y = hwy, color = drv)) +\n  geom_point(alpha = 0.7) +\n  scale_color_brewer(palette = \"Set1\", name = \"Drive Type\") +\n  labs(\n    title    = \"Displacement vs MPG by Drive Type\",\n    subtitle = \"Drive types: front (f), rear (r), 4wd (4)\",\n    x        = \"Displacement (L)\",\n    y        = \"Highway MPG\",\n    caption  = \"Source: ggplot2::mpg\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(legend.position = \"bottom\")\n\n\n\nDisplacement vs MPG Colored by Drive Type\n\n\n\nSummary: Front‑wheel drive cars (f) dominate the high‑MPG, low‑displacement region, averaging around 30–40 MPG. Rear‑drive (r) vehicles are more spread but generally less efficient. Four‑wheel drive (4) cluster by larger displacements and lower MPG (15–25). This confirms drivetrain influences both design and fuel economy.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Trivariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-quad.html",
    "href": "bw/bw-quad.html",
    "title": "\n4  Quadvariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking quadvariate visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\n5 Effective Visualization Checklist\n\n\nEffective? right for data, clear purpose, unbiased, not misleading\n\nComplete? title, subtitle, axis & legend labels, caption, data annotation\n\nAccessible? color-blind safe palette, alt text, readable text size\n\n6 4. Quadrivariate Visualization\nResearch Question: How do displacement, manufacturer, drive type, and cylinder count interact to influence highway MPG?\n\nlibrary(ggplot2)\nggplot(mpg, aes(x = displ, y = hwy, color = manufacturer, size = cyl)) +\n  geom_point(alpha = 0.6) +\n  facet_wrap(~drv) +\n  scale_color_viridis_d(option = \"turbo\", name = \"Manufacturer\") +\n  labs(\n    title    = \"Engine Size, Manufacturer, Cylinders, and MPG\",\n    subtitle = \"Faceted by drive type; point size = cylinder count\",\n    x        = \"Displacement (L)\",\n    y        = \"Highway MPG\",\n    caption  = \"Source: ggplot2::mpg\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"bottom\",\n    strip.text     = element_text(size = 12)\n  )\n\n\n\nMulti-Dimensional Car Performance\n\n\n\nSummary: Within each drivetrain facet, manufacturers cluster distinctly—e.g., Toyota and Honda produce more low‑displacement/high‑MPG models, while American brands often show larger displacements. Vehicles with 4 or 6 cylinders occupy the mid‑range, whereas 8‑cylinder models (larger points) appear only at low MPG. This view highlights how brand, cylinder count, and drivetrain jointly shape efficiency.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Quadvariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-spatial.html",
    "href": "bw/bw-spatial.html",
    "title": "\n5  Spatial Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking spatial visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\n6 Effective Visualization Checklist\n\n\nEffective? right for data, clear purpose, unbiased, not misleading\n\nComplete? title, subtitle, axis & legend labels, caption, data annotation\n\nAccessible? color-blind safe palette, alt text, readable text size\n\n\n7 5. Spatial Visualization\nResearch Question: Which U.S. states had the highest murder arrest rates in 1973?\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\nlibrary(maps)\n\n\nAttaching package: 'maps'\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nlibrary(viridis)\n\nLoading required package: viridisLite\n\nAttaching package: 'viridis'\n\nThe following object is masked from 'package:maps':\n\n    unemp\n\nstates_map &lt;- map_data(\"state\")\narrests &lt;- USArrests %&gt;%\n  rownames_to_column(\"region\") %&gt;%\n  mutate(region = tolower(region))\n\nmap_df &lt;- left_join(states_map, arrests, by = \"region\")\n\nggplot(map_df, aes(x = long, y = lat, group = group, fill = Murder)) +\n  geom_polygon(color = \"white\") +\n  scale_fill_viridis_c(name = \"Murder Rate\") +\n  coord_fixed(1.3) +\n  labs(\n    title    = \"Murder Arrest Rates by State (1973)\",\n    subtitle = \"USArrests dataset\",\n    caption  = \"Source: datasets::USArrests\"\n  ) +\n  theme_void(base_size = 14)\n\n\n\nU.S. Murder Arrest Rates by State (1973)\n\n\n\nSummary: The highest arrest rates are clustered in the Deep South (e.g., Louisiana, Mississippi, Alabama), reflecting regional social dynamics of the era. Northern and Western states mostly register lower rates (3–5 per 100k), revealing clear geographic patterns in violent crime across the country.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "bw/soloproject.html",
    "href": "bw/soloproject.html",
    "title": "\n6  Solo Project\n",
    "section": "",
    "text": "7 5. Solo Project",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Solo Project</span>"
    ]
  },
  {
    "objectID": "bw/soloproject.html#introduction",
    "href": "bw/soloproject.html#introduction",
    "title": "\n6  Solo Project\n",
    "section": "\n7.1 Introduction",
    "text": "7.1 Introduction\nIce hockey is Canada’s national winter sport, but not every province fields the same number of NHL franchises.\nIn this short project, I will map Canadian provinces by how many NHL teams they host and reflect on regional concentrations of top‑tier hockey markets.\n\n# Here I load required packages\nlibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\n\n\nAttaching package: 'rnaturalearthdata'\n\n\nThe following object is masked from 'package:rnaturalearth':\n\n    countries110\n\n\n\n# 1. Here I get Canada's provinces as an sf object\ncanada &lt;- ne_states(country = \"Canada\", returnclass = \"sf\")\n\n# 2. Here I compile number of NHL teams per province\nnhl_counts &lt;- tibble::tibble(\n  name_en   = c(\"British Columbia\", \"Alberta\", \"Ontario\", \"Quebec\", \"Manitoba\"),\n  nhl_teams = c(1,                 2,         2,         1,        1)\n)\n\n# 3. Here I Left‑join and replace NA with 0 for provinces without NHL teams\ncanada_teams &lt;- canada %&gt;%\n  left_join(nhl_counts, by = \"name_en\") %&gt;%\n  mutate(nhl_teams = tidyr::replace_na(nhl_teams, 0))\n\n\n# 4. Now onto building my choropleth map: \nggplot(canada_teams) +\n  geom_sf(aes(fill = nhl_teams), color = \"white\", size = 0.2) +\n  scale_fill_viridis_c(\n    option = \"plasma\", direction = -1,\n    breaks = 0:2\n  ) +\n  labs(\n    title    = \"NHL Franchises by Canadian Province\",\n    subtitle = \"Count of teams in each province (2025)\",\n    fill     = \"NHL Teams\",\n    caption  = \"Data: NHL official site; geography: Natural Earth\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    panel.grid.major = element_line(color = \"gray80\"),\n    plot.title       = element_text(face = \"bold\", size = 20),\n    plot.subtitle    = element_text(size = 16)\n  )\n\n\n\n\n\n\n\nSummary : British Columbia, Alberta, Ontario, Quebec, and Manitoba are the only five provinces to host NHL franchises. The two biggest population centres, Toronto (Ontario) and Montreal (Quebec) each have a team, while Alberta’s two, Calgary and Edmonton, reflect the province’s strong hockey culture despite a smaller population. Manitoba’s Winnipeg Jets carry a storied history of community revival, and British Columbia’s solitary team in Vancouver highlights the Pacific coast’s passion for the sport. All other provinces (and territories) lack NHL presence, underscoring how market size and historical investment shape the geography of Canada’s top‑tier hockey.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Solo Project</span>"
    ]
  },
  {
    "objectID": "bw/capstones.html",
    "href": "bw/capstones.html",
    "title": "7  Capstone Talks",
    "section": "",
    "text": "Presenter Name: Jacob Hellenbrand Talk Title: Evolving Intelligence: Simulating Life with Genetic Algorithms\nMain Message: Jacob’s presentation delved into the use of AI agents to simulate life, exploring whether these AI entities can be considered alive, their potential for evolution, and the ethical implications of such developments. He demonstrated how AI agents evolve through neural networks, based on their ability to survive and reproduce by consuming food and maintaining fitness. By incorporating genetic algorithms, he explained how agents undergo mutation and gene crossover to adapt over time, highlighting how certain traits, like speed, become dominant in the simulated environment. The results indicated that initial poor neural networks led to agents failing to reproduce, while beneficial mutations, particularly those related to speed, enabled agents to thrive. The focus was on how mutation drives evolution, though there was a lack of genetic diversity as speed genes became predominant.\nSuggestion for Improvement for Jacob: One potential improvement could be to explore and explain the limitations of the simulation in greater detail. For instance, addressing how randomness and initial conditions (such as starting neural networks) influence the outcomes would provide more insight into the reliability of the results. Additionally, discussing potential ways to enhance agent behavior or increase the diversity of outcomes (e.g., by adjusting mutation rates or introducing new variables) could encourage further exploration of the simulation’s complexity.\nPresenter Name: Long Truong Talk Title: Time to Launch: Predicting Astronaut Mission Time with Bayes\nMain Message: Long’s presentation examined the evolution of space missions by analyzing changes in mission frequency and duration over time, particularly from the Cold War era to 2018. The dataset included astronaut details (age, gender, nationality), spacecraft information, mission durations, and EVAs, which were analyzed to identify trends in astronaut missions. He presented Bayesian hierarchical models to predict mission durations, with the first model (using one predictor, spacecraft in orbit) outperforming the second model that used multiple predictors (such as occupation, number of missions, and selection year). The discussion highlighted the challenges of using more complex models, with the second model underperforming, likely due to overfitting or the inclusion of too many predictors.\nSuggestion for Improvement: To enhance clarity, it would be beneficial to guide the audience through the reasoning behind selecting specific predictors in the second model and how each might contribute to predictive accuracy. Providing more explanation on the Bayesian hierarchical modeling approach would also help those unfamiliar with advanced statistical methods understand the model’s significance.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Capstone Talks</span>"
    ]
  },
  {
    "objectID": "Summary(Exams)/exam1.html",
    "href": "Summary(Exams)/exam1.html",
    "title": "\n8  Exam-1 Kupakwashe Mhere\n",
    "section": "",
    "text": "#install.packages(\"tidytuesdayR\")\nlibrary(tidytuesdayR)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\ntuesdata &lt;- tt_load('2020-02-18')\n\n---- Compiling #TidyTuesday Information for 2020-02-18 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"food_consumption.csv\"\n\nfc &lt;- tuesdata$food_consumption\n\n\nhead(fc)\n\n# A tibble: 6 × 4\n  country   food_category consumption co2_emmission\n  &lt;chr&gt;     &lt;chr&gt;               &lt;dbl&gt;         &lt;dbl&gt;\n1 Argentina Pork                10.5          37.2 \n2 Argentina Poultry             38.7          41.5 \n3 Argentina Beef                55.5        1712   \n4 Argentina Lamb & Goat          1.56         54.6 \n5 Argentina Fish                 4.36          6.96\n6 Argentina Eggs                11.4          10.5 \n\ndim(fc)\n\n[1] 1430    4\n\nstr(fc)\n\nspc_tbl_ [1,430 × 4] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ country      : chr [1:1430] \"Argentina\" \"Argentina\" \"Argentina\" \"Argentina\" ...\n $ food_category: chr [1:1430] \"Pork\" \"Poultry\" \"Beef\" \"Lamb & Goat\" ...\n $ consumption  : num [1:1430] 10.51 38.66 55.48 1.56 4.36 ...\n $ co2_emmission: num [1:1430] 37.2 41.53 1712 54.63 6.96 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   country = col_character(),\n  ..   food_category = col_character(),\n  ..   consumption = col_double(),\n  ..   co2_emmission = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n# Country plot\nggplot(fc, aes(x = country)) +\n    geom_bar(fill = \"red\") +\n  labs(\n    title = \"Food Consumption Records by Country\",\n    x = \"Country\",\n    y = \"Number of Records\",\n    caption = \"By Kupakwashe\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\n\n\n\n\n\n# Food item plot\nggplot(fc, aes(x = food_category)) +\n  geom_bar() +\n  labs(\n    title = \"Food Consumption Records by Food Category\",\n    x = \"Food Category\",\n    y = \"Number of Records\",\n    caption = \"By Kupakwashe\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n# Consumption plot (histogram)\nggplot(fc, aes(x = consumption)) +\n  geom_histogram() +\n    labs(\n    title = \"Distribution of Food Consumption\",\n    x = \"Consumption (kg per capita per year)\",\n    y = \"Frequency\",\n    caption = \"By Kupakwashe\"\n  ) +\n  theme_minimal()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nOverall food consumption / food category - bar graph Overall food consumption / country - bar graph\nI have a few more questions:\nHow does the region of the world impact consumption patterns? What effect does a country’s size have on its consumption?",
    "crumbs": [
      "Summary(Exams)",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Exam-1 Kupakwashe Mhere</span>"
    ]
  },
  {
    "objectID": "Summary(Exams)/exam2.html",
    "href": "Summary(Exams)/exam2.html",
    "title": "\n9  Exam-2 Kupakwashe Mhere\n",
    "section": "",
    "text": "library(tidytuesdayR)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(rnaturalearth)\nlibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\n\n\ntuesdata &lt;- tt_load('2020-02-18')\n\n---- Compiling #TidyTuesday Information for 2020-02-18 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"food_consumption.csv\"\n\nfc &lt;- tuesdata$food_consumption\n\n\nstr(fc)\n\nspc_tbl_ [1,430 × 4] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ country      : chr [1:1430] \"Argentina\" \"Argentina\" \"Argentina\" \"Argentina\" ...\n $ food_category: chr [1:1430] \"Pork\" \"Poultry\" \"Beef\" \"Lamb & Goat\" ...\n $ consumption  : num [1:1430] 10.51 38.66 55.48 1.56 4.36 ...\n $ co2_emmission: num [1:1430] 37.2 41.53 1712 54.63 6.96 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   country = col_character(),\n  ..   food_category = col_character(),\n  ..   consumption = col_double(),\n  ..   co2_emmission = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nhead(fc)\n\n# A tibble: 6 × 4\n  country   food_category consumption co2_emmission\n  &lt;chr&gt;     &lt;chr&gt;               &lt;dbl&gt;         &lt;dbl&gt;\n1 Argentina Pork                10.5          37.2 \n2 Argentina Poultry             38.7          41.5 \n3 Argentina Beef                55.5        1712   \n4 Argentina Lamb & Goat          1.56         54.6 \n5 Argentina Fish                 4.36          6.96\n6 Argentina Eggs                11.4          10.5 \n\n\n\nfcc &lt;- fc %&gt;%\n  mutate(\n    food_category = ifelse(food_category == \"Lamb & Goat\", \"Lamb\", food_category),\n    food_category = ifelse(food_category == \"Milk - inc. cheese\", \"Dairy\", food_category),\n    food_category = ifelse(food_category == \"Wheat and Wheat Products\", \"Wheat\", food_category),\n    food_category = ifelse(food_category == \"Nuts inc. Peanut Butter\", \"Nuts\", food_category),\n    ) %&gt;%\n  arrange(desc(consumption))\n\n\nne_countries(return = \"sf\") |&gt;\n  select(name, geometry) %&gt;%\n  mutate(name = ifelse(name == \"United States of America\", \"USA\", name)) |&gt;\n  mutate(name = ifelse(name == \"Bosnia and Herz\", \"Bosnia and Herzegovina\", name)) |&gt;\n  mutate(name = ifelse(name == \"Czechia\", \"Czech Republic\", name)) |&gt;\n  mutate(name = ifelse(name == \"Taiwan\", \"Taiwan. ROC\", name)) |&gt;\n  left_join(\n    fcc |&gt;\n      select (-co2_emmission) |&gt;\n      group_by(food_category) |&gt;\n      mutate(consumption = (consumption - mean(consumption))/sd(consumption)),\n    join_by(name == country)) |&gt;\n  pivot_wider(names_from = food_category, values_from = consumption)|&gt;\n  select(-\"NA\") |&gt;\n  pivot_longer(cols = c(-name, -geometry),\n               names_to = \"food_category\",\n               values_to = \"consumption\") |&gt;\n  ggplot() +\n  geom_sf(aes(fill = consumption)) +\n  facet_wrap(~food_category) +\n  scale_fill_viridis_c(option = \"C\", name = \"Standardized\\nConsumption (Z-score)\",\n                       guide = guide_colorbar(barwidth = 10, barheight = 0.5)) +\n  labs(\n    title = \"Standardized Food Consumption Patterns by Country and Food Category\",\n    caption = \"Visualization by Kupakwashe\"\n  ) +\n  annotate(\"text\", x = -170, y = -55, label = \"By Kupakwashe\", hjust = 0, vjust = 1, size = 3, alpha = 0.5) +\n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    plot.title = element_text(face = \"bold\", size = 14),\n    plot.caption = element_text(size = 8, hjust = 0),\n    strip.text = element_text(face = \"bold\")\n  )\n\n\n\nSource: tidytuesdayR (2020-02-18)",
    "crumbs": [
      "Summary(Exams)",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Exam-2 Kupakwashe Mhere</span>"
    ]
  },
  {
    "objectID": "ica/ica-uni.html",
    "href": "ica/ica-uni.html",
    "title": "\n10  Univariate Viz\n",
    "section": "",
    "text": "Use this file for practice with the univariate viz in-class activity. Refer to the class website for details.\n\nhikes &lt;- read.csv(\"https://mac-stat.github.io/data/high_peaks.csv\")\n\n\nlibrary(ggplot2)\n\nExercise 1\na. The caterory difficulty rating should have a feature which should show us what the difficulty is out of b. For the elevation variable, we would need units eg ft/m/inch.\nExercise 2\n\nggplot(hikes, aes(x = rating))\n\n\n\n\n\n\n\nExercise 3\n\nggplot(hikes, aes(x = rating))\n\n\n\n\n\n\n\nThe code generated the 3 categories. the first argument of the ggplot function is making reference to the data source (pull data from the source.), x = rating communicates what element or part of the data we want to work with/include in the graph, particularly on the x axis. aes stands for aesthetics.\nExercise 4\n\n# adding geom bar() added bars in the sections of the difficulties proportional to their count on the dataset.\nggplot(hikes, aes(x = rating)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n# change in labels as well as styling, added styling element in the \"labs\" line.\nggplot(hikes, aes(x = rating)) +\n  geom_bar() +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n# the color fill of the bar graphs change to blue, added styling element in the \"geom_bar line\"\nggplot(hikes, aes(x = rating)) +\n  geom_bar(fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n# change in the edge color of the bar graphs, change in line with the geom bar\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n# \"theme_minimal clears the canvas of the graph\"\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\")  +\n  labs(x = \"Rating\", y = \"Number of hikes\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\ndim(hikes)\n\n[1] 46  7",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-bi.html",
    "href": "ica/ica-bi.html",
    "title": "\n11  Bivariate Viz\n",
    "section": "",
    "text": "Use this file for practice with the bivariate viz in-class activity. Refer to the class website for details.\n\nlibrary(ggplot2)\n\n\nelections &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\n\nhead(elections)\n\n  state_name state_abbr historical    county_name county_fips total_votes_20\n1    Alabama         AL        red Autauga County        1001          27770\n2    Alabama         AL        red Baldwin County        1003         109679\n3    Alabama         AL        red Barbour County        1005          10518\n4    Alabama         AL        red    Bibb County        1007           9595\n5    Alabama         AL        red  Blount County        1009          27588\n6    Alabama         AL        red Bullock County        1011           4613\n  repub_pct_20 dem_pct_20 winner_20 total_votes_16 repub_pct_16 dem_pct_16\n1        71.44      27.02     repub          24661        73.44      23.96\n2        76.17      22.41     repub          94090        77.35      19.57\n3        53.45      45.79     repub          10390        52.27      46.66\n4        78.43      20.70     repub           8748        76.97      21.42\n5        89.57       9.57     repub          25384        89.85       8.47\n6        24.84      74.70       dem           4701        24.23      75.09\n  winner_16 total_votes_12 repub_pct_12 dem_pct_12 winner_12 total_population\n1     repub          23909        72.63      26.58     repub            54907\n2     repub          84988        77.39      21.57     repub           187114\n3     repub          11459        48.34      51.25       dem            27321\n4     repub           8391        73.07      26.22     repub            22754\n5     repub          23980        86.49      12.35     repub            57623\n6       dem           5318        23.51      76.31       dem            10746\n  percent_white percent_black percent_asian percent_hispanic per_capita_income\n1            76            18             1                2             24571\n2            83             9             1                4             26766\n3            46            46             0                5             16829\n4            75            22             0                2             17427\n5            88             1             0                8             20730\n6            22            71             0                6             18628\n  median_rent median_age\n1         668       37.5\n2         693       41.5\n3         382       38.3\n4         351       39.4\n5         403       39.6\n6         276       39.6\n\n\n\n#Exercise 0\n# **A**. \nggplot(elections, aes(x=winner_20)) +\n       geom_bar()\n\n\n\n\n\n\n\n\n#**B**\nggplot(elections, aes(x=repub_pct_20)) +\ngeom_histogram(color=\"white\") \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n#Exercise 1\nggplot(elections, aes(y=repub_pct_20, x=repub_pct_16)) +\n  geom_point()\n\n\n\n\n\n\n\n\n#**Exercise 2**\n# Set up the plotting frame\n# there are two variables which are now quantitative instead of categorical\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16))\n\n\n\n\n\n\n\n\n# Add a layer of points for each county\n# Take note of the geom!\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point()\n\n\n\n\n\n\n\n\n# Change the shape of the points\n# just changes the appearance of the shapes we see, makes it more or less clear\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\ngeom_point(shape = 10)\n\n\n\n\n\n\n\n\n# YOU TRY: Modify the code to make the points \"orange\"\n# NOTE: Try to anticipate if \"color\" or \"fill\" will be useful here. Then try both.\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(color=\"red\", shape = 5)\n\n\n\n\n\n\n\n\n# Add a layer that represents each county by the state it's in\n# Take note of the geom and the info it needs to run!\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_text(aes(label = state_abbr))\n\n\n\n\n\n\n\n\n# the relationship between republican support in 2020 and 2016 is positive, this can be seen with the upwards sloping curve, which is also supported by the line of best fit which is positive sloping as well. southern states eg Texas, Utah tend to deviate as these were more positively correlated and caused a positive result for 2020 from 2016\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(color=\"red\", shape = 5) +\ngeom_abline() +\n   geom_text(aes(label = state_abbr))",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html",
    "href": "ica/ica-multi.html",
    "title": "\n12  Mulivariate Viz\n",
    "section": "",
    "text": "Use this file for practice with the mulivariate viz in-class activity. Refer to the class website for details.\n\nlibrary(ggplot2)\n\n\neducation &lt;- read.csv(\"https://mac-stat.github.io/data/sat.csv\")\nhead(education)\n\n       State expend ratio salary frac verbal math  sat  fracCat\n1    Alabama  4.405  17.2 31.144    8    491  538 1029   (0,15]\n2     Alaska  8.963  17.6 47.951   47    445  489  934 (45,100]\n3    Arizona  4.778  19.3 32.175   27    448  496  944  (15,45]\n4   Arkansas  4.459  17.1 28.934    6    482  523 1005   (0,15]\n5 California  4.992  24.0 41.078   45    417  485  902  (15,45]\n6   Colorado  5.443  18.4 34.571   29    462  518  980  (15,45]\n\n\n\nggplot(education, aes(x=sat, y=State)) +\n  geom_boxplot() \n\n\n\n\n\n\n\n\n#the range of the sat scores goes from just below 850 to just above 1100, it is pretty spread out and follows no pattern whatsoever, the explanation behind this might be just alphabetical ordering of the states without ordering them using specific characteristics.\n\n\n#Exercise 2a\nggplot(education, aes(x=expend, y=sat)) +\n  geom_point() +\n    geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n# Construct a plot of sat vs salary\n# Include a \"best fit linear regression model\" (HINT: method = \"lm\")\n\nggplot(education, aes(x=salary, y=sat)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n#Part b. \n#Spending is indirectly correlated with spending ie states with low spending also have higher sat scores.\n\n\n#Exercise 3: SAT Scores vs Per Pupil Spending and Teacher Salaries\n#Construct one visualization of the relationship of sat with salary and expend. HINT: Start with just 2 variables and tweak that code to add the third variable. Try out a few things!\nggplot(education, aes(x=salary, y=sat, alpha = expend)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: The following aesthetics were dropped during statistical transformation: alpha.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\n\n\n\n\n#(Exercise 4: Another way to Incorporate Scale\n#It can be tough to distinguish color scales and size scales for quantitative variables. Another option is to discretize a quantitative variable, or basically cut it up into categories.\n\n#Construct the plot below. Check out the code and think about what’s happening here. What happens if you change “2” to “3”?\n\n#ggplot(education, aes(y = sat, x = salary, color = cut(expend, 2))) + \n#  geom_point() + \n # geom_smooth(se = FALSE, method = \"lm\")\n\n#Describe the trivariate relationship between sat, salary, and expend.)\n\nggplot(education, aes(y = sat, x = salary, color = cut(expend, 2))) + \n geom_point() + \n  geom_smooth(se = FALSE, method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n# Changing 2 to 3 changes the range, ie min and max and how many categories the data set is cut into. Sat is high in states where the salary is low, but it is also very highly correlated (lower) in states the expenditure is extremely low\n\n\n#Exercise 5: Finally an Explanation\n#It’s strange that SAT scores seem to decrease with spending. But we’re leaving out an important variable from our analysis: the fraction of a state’s students that actually take the SAT. The fracCat variable indicates this fraction: low (under 15% take the SAT), medium (15-45% take the SAT), and high (at least 45% take the SAT).\n\n\n\n#Part a\n#Build a univariate viz of fracCat to better understand how many states fall into each category.\n\n\n\n#Part b\n#Build 2 bivariate visualizations that demonstrate the relationship between sat and fracCat. What story does your graphic tell and why does this make contextual sense?\n\n#Part c\n#Make a trivariate visualization that demonstrates the relationship of sat with expend AND fracCat. Highlight the differences in fracCat groups through color AND unique trend lines. What story does your graphic tell?\n#Does it still seem that SAT scores decrease as spending increases?\n\n#Part d\n#Putting all of this together, explain this example of Simpson’s Paradox. That is, why did it appear that SAT scores decrease as spending increases even though the opposite is true?",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html",
    "href": "ica/ica-spatial.html",
    "title": "\n13  Spatial Viz\n",
    "section": "",
    "text": "Use this file for practice with the spatial viz in-class activity. Refer to the class website for details.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nfave_places &lt;- read.csv(\"https://hash-mac.github.io/stat112site-s25/data/our_fave_places.csv\")\n\n# Check it out\nhead(fave_places)\n\n  latitude longitude\n1       59        18\n2       45       -93\n3       33      -117\n4       40       116\n5       40       106\n6       37      -122\n\n\n\n#Part a\n#You can use a “two-finger scroll” to zoom in and out.\n\n# Load the leaflet package\nlibrary(leaflet)\n\n# Just a plotting frame\nleaflet(data = fave_places)\n\n\n\n\n\n\n# we now have the world map\nleaflet(data = fave_places) |&gt; \n  addTiles()\n\n\n\n\n\n\n# we now have the markers corresponding to the data points\n# longitude and latitude refer to the variables in our data\nleaflet(data = fave_places) |&gt; \n  addTiles() |&gt; \n  addMarkers(lng = ~longitude, lat = ~latitude)\n\n\n\n\n\n\n# Since we named them \"longitude\" and \"latitude\", the function\n# automatically recognizes these variables. No need to write them!\nleaflet(data = fave_places) |&gt; \n  addTiles() |&gt; \n  addMarkers()\n\n\n\n\n\n\n# Load package needed to change color\nlibrary(gplots)\n\n\nAttaching package: 'gplots'\n\n\nThe following object is masked from 'package:stats':\n\n    lowess\n\n# We can add colored circles instead of markers at each location\nleaflet(data = fave_places) |&gt; \n  addTiles() |&gt; \n  addCircles(color = col2hex(\"red\"))\n\n\n\n\n\n\n# We can change the background\n# Mark locations with yellow dots\n# And connect the dots, in their order in the dataset, with green lines\n# (These green lines don't mean anything here, but would if this were somebody's travel path!)\nleaflet(data = fave_places) |&gt;\n  addProviderTiles(\"USGS\") |&gt;\n  addCircles(weight = 10, opacity = 1, color = col2hex(\"yellow\")) |&gt;\n  addPolylines(\n    lng = ~longitude,\n    lat = ~latitude,\n    color = col2hex(\"green\")\n  )\n\n\n\n\n\n\n# Import starbucks location data\nstarbucks &lt;- read.csv(\"https://mac-stat.github.io/data/starbucks.csv\")\n\n\n# Don't worry about the syntax\nstarbucks_mn &lt;- starbucks |&gt;   \n  filter(Country == \"US\", State.Province == \"MN\")\n\n\nleaflet(data = starbucks_mn) |&gt; \n  addTiles() |&gt; \n  addCircles(color = col2hex(\"black\"))\n\nAssuming \"Longitude\" and \"Latitude\" are longitude and latitude, respectively\n\n\n\n\n\n\n\nggplot(data = starbucks, aes(y= Latitude, x=Longitude)) +\ngeom_point(aes(alpha = 0.2, size = 0.2))\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n# Load the package\nlibrary(rnaturalearth)\n\n# Get info about country boundaries across the world\n# in a \"sf\" or simple feature format\nworld_boundaries &lt;- ne_countries(returnclass = \"sf\")\n\n\n# What does this code produce? The world map\n# What geom are we using for the point map? simple feature\nggplot(world_boundaries) + \n  geom_sf()\n\n\n\n\n\n\n\n\n# Load package needed to change map theme\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\n\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\n\n\nAttaching package: 'mosaic'\n\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\n# Add a point for each Starbucks\n# NOTE: The Starbucks info is in our starbucks data, not world_boundaries\n# How does this change how we use geom_point?! mapping with reference to world coordinates on a map canvas rather than just on an axis. \nggplot(world_boundaries) + \n  geom_sf() + \n  geom_point(\n    data = starbucks,\n    aes(x = Longitude, y = Latitude),\n    alpha = 0.3, size = 0.2, color = \"darkgreen\"\n  ) +\n  theme_map()\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n# starbucks is not present in africa, and is mainly present in the middle east + eaurope as well as majorly present in north america\n\n\n# We'll learn this syntax soon! Don't worry about it now.\nstarbucks_cma &lt;- starbucks |&gt; \n  filter(Country %in% c('CA', 'MX', 'US'))\n\n\ncma_boundaries &lt;- ne_states(\n  country = c(\"canada\", \"mexico\", \"united states of america\"),\n  returnclass = \"sf\")\n\n\n# Just the boundaries\nggplot(cma_boundaries) + \n  geom_sf()\n\n\n\n\n\n\n\n\n# Add the points\n# And zoom in\nggplot(cma_boundaries) + \n  geom_sf() + \n  geom_point(\n    data = starbucks_cma,\n    aes(x = Longitude, y = Latitude),\n    alpha = 0.3,\n    size = 0.2,\n    color = \"darkgreen\"\n  ) +\n  coord_sf(xlim = c(-179.14, -50)) +\n  theme_map()\n\n\n\n\n\n\n\n\nstarbucks_midwest &lt;- starbucks |&gt; \n  filter(State.Province %in% c(\"MN\", \"ND\", \"SD\", \"WI\"))\n\n\n# Load packages\nlibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary(maps)\n\n\nAttaching package: 'maps'\n\n\nThe following object is masked from 'package:purrr':\n\n    map\n\n# Get the boundaries\nmidwest_boundaries &lt;- st_as_sf(\n  maps::map(\"county\",\n            region = c(\"minnesota\", \"wisconsin\", \"north dakota\", \"south dakota\"), \n            fill = TRUE, plot = FALSE))\n\n# Check it out\nhead(midwest_boundaries)\n\nSimple feature collection with 6 features and 1 field\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -96.81268 ymin: 45.05167 xmax: -93.01397 ymax: 48.53526\nGeodetic CRS:  +proj=longlat +ellps=clrk66 +no_defs +type=crs\n                                     ID                           geom\nminnesota,aitkin       minnesota,aitkin MULTIPOLYGON (((-93.03689 4...\nminnesota,anoka         minnesota,anoka MULTIPOLYGON (((-93.51817 4...\nminnesota,becker       minnesota,becker MULTIPOLYGON (((-95.14537 4...\nminnesota,beltrami   minnesota,beltrami MULTIPOLYGON (((-95.58655 4...\nminnesota,benton       minnesota,benton MULTIPOLYGON (((-93.77027 4...\nminnesota,big stone minnesota,big stone MULTIPOLYGON (((-96.10794 4...\n\n\n\n ggplot(cma_boundaries) + \n   geom_sf() + \n   geom_point(\n     data = starbucks_midwest,\n     aes(x = Longitude, y = Latitude),\n     alpha = 0.8,\n     size = 1, \n     color = 'darkgreen'\n   ) + \n   theme_map() + coord_sf(xlim = c(min(starbucks_midwest$Longitude) - 20, max(starbucks_midwest$Longitude) + 20), \n           ylim = c(min(starbucks_midwest$Latitude) - 20, max(starbucks_midwest$Latitude) + 20))\n\n\n\n\n\n\n\n\n# Point map (we made this earlier)\nggplot(cma_boundaries) + \n  geom_sf() + \n  geom_point(\n    data = starbucks_cma,\n    aes(x = Longitude, y = Latitude),\n    alpha = 0.3,\n    size = 0.2,\n    color = \"darkgreen\"\n  ) +\n  coord_sf(xlim = c(-179.14, -50), ylim = c(14.54, 83.11)) +\n  theme_map()\n\n\n\n\n\n\n\n\n# the plot now has contours as indication of density of the points?\n# we added density (2d) and removed alpha?!\nggplot(cma_boundaries) + \n  geom_sf() + \n  geom_density_2d(\n    data = starbucks_cma,\n    aes(x = Longitude, y = Latitude),\n    size = 0.2,\n    color = \"darkgreen\"\n  ) +\n  coord_sf(xlim = c(-179.14, -50), ylim = c(14.54, 83.11)) +\n  theme_map()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\nelections_by_state &lt;-  read.csv(\"https://mac-stat.github.io/data/election_2020_by_state.csv\")\nelections_by_counties &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\n\n# Don't worry about the code!\n\nelections_by_state &lt;- elections_by_state |&gt; \n  filter(state_abbr != \"DC\") |&gt; \n  select(state_name, state_abbr, repub_pct_20) |&gt; \n  mutate(repub_20_categories = \n           cut(repub_pct_20, \n               breaks = seq(30, 70, by = 5), \n               labels = c(\"30-34\", \"35-39\", \"40-44\", \"45-49\",\n                          \"50-54\", \"55-59\", \"60-64\", \"65-70\"), \n               include.lowest = TRUE))\n\nelections_by_counties &lt;- elections_by_counties |&gt; \n  select(state_name, state_abbr, county_name, county_fips,\n          repub_pct_20, median_age, median_rent) |&gt; \n  mutate(repub_20_categories = \n           cut(repub_pct_20, \n               breaks = seq(0, 100, by = 10),\n               labels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\",\n                          \"50-59\", \"60-69\", \"70-79\", \"80-89\", \"90-100\"),\n               include.lowest = TRUE))\n\n\n# Get the latitude and longitude coordinates of state boundaries\nstates_map &lt;- map_data(\"state\")\n\n# Check it out\nhead(states_map)\n\n       long      lat group order  region subregion\n1 -87.46201 30.38968     1     1 alabama      &lt;NA&gt;\n2 -87.48493 30.37249     1     2 alabama      &lt;NA&gt;\n3 -87.52503 30.37249     1     3 alabama      &lt;NA&gt;\n4 -87.53076 30.33239     1     4 alabama      &lt;NA&gt;\n5 -87.57087 30.32665     1     5 alabama      &lt;NA&gt;\n6 -87.58806 30.32665     1     6 alabama      &lt;NA&gt;\n\n\n\n# Note where the dataset, elections_by_state, is used\n# Note where the background map, states_map, is used\nggplot(elections_by_state, aes(map_id = state_name, fill = repub_pct_20)) +\n  geom_map(map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map() \n\n\n\n\n\n\n\n\n# Make it nicer!\nggplot(elections_by_state, aes(map_id = state_name, fill = repub_pct_20)) +\n  geom_map(map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map() + \n  scale_fill_gradientn(name = \"% Republican\", colors = c(\"blue\", \"purple\", \"red\"), values = scales::rescale(seq(0, 100, by = 5)))\n\n\n\n\n\n\n\n\nggplot(elections_by_state, aes(map_id = state_name, fill = repub_20_categories)) +\n  geom_map(map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map()\n\n\n\n\n\n\n\n\n# Load package needed for refining color palette\nlibrary(RColorBrewer)\n\n# Now fix the colors\nggplot(elections_by_state, aes(map_id = state_name, fill = repub_20_categories)) +\n  geom_map(map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map() + \n  scale_fill_manual(values = rev(brewer.pal(8, \"RdBu\")), name = \"% Republican\")\n\n\n\n\n\n\n\n\n# Get only the starbucks data from the US\nstarbucks_us &lt;- starbucks |&gt; \n  filter(Country == \"US\")\n\n# Map it\nggplot(elections_by_state, aes(map_id = state_name, fill = repub_20_categories)) +\n  geom_map(map = states_map) +\n  geom_point(\n    data = starbucks_us,\n    aes(x = Longitude, y = Latitude),\n    size = 0.05,\n    alpha = 0.2,\n    inherit.aes = FALSE\n  ) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map() + \n  scale_fill_manual(values = rev(brewer.pal(8, \"RdBu\")), name = \"% Republican\")\n\n\n\n\n\n\n\n\n# Get the latitude and longitude coordinates of county boundaries\nlibrary(socviz)\ndata(county_map) \n\n# Check it out\nhead(county_map)\n\n     long      lat order  hole piece            group    id\n1 1225889 -1275020     1 FALSE     1 0500000US01001.1 01001\n2 1235324 -1274008     2 FALSE     1 0500000US01001.1 01001\n3 1244873 -1272331     3 FALSE     1 0500000US01001.1 01001\n4 1244129 -1267515     4 FALSE     1 0500000US01001.1 01001\n5 1272010 -1262889     5 FALSE     1 0500000US01001.1 01001\n6 1276797 -1295514     6 FALSE     1 0500000US01001.1 01001\n\n\n\n# Add 0's at the beginning of any fips_code that's fewer than 5 numbers long\n# Don't worry about the syntax\nelections_by_counties &lt;- elections_by_counties |&gt; \n  mutate(county_fips = as.character(county_fips)) |&gt; \n  mutate(county_fips = \n           ifelse(nchar(county_fips) == 4, paste0(\"0\", county_fips), county_fips))\n\n\nhead(county.fips)\n\n  fips        polyname\n1 1001 alabama,autauga\n2 1003 alabama,baldwin\n3 1005 alabama,barbour\n4 1007    alabama,bibb\n5 1009  alabama,blount\n6 1011 alabama,bullock\n\n\n\nggplot(elections_by_counties, aes(map_id = county_fips, fill = repub_20_categories)) +\n  geom_map(map = county_map) +\n  scale_fill_manual(values = rev(brewer.pal(10, \"RdBu\")), name = \"% Republican\") +\n  expand_limits(x = county_map$long, y = county_map$lat) +\n  theme_map() +\n  theme(legend.position = \"right\") + \n  coord_equal()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-effective.html",
    "href": "ica/ica-effective.html",
    "title": "\n14  Effective Viz\n",
    "section": "",
    "text": "Use this file for practice with the spatial viz in-class activity. Refer to the class website for details.\n\n# Load tidyverse package for plotting and wrangling\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Import the data\nweather &lt;- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\") |&gt; \n  mutate(date = as.Date(date))\n\n\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point()\n\nWarning: Removed 27 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n#making it better\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point() + \n  labs(x = \"9am Temperature\", y = \"3pm Temperature\", title = \"Weather in 3 Australian Locations\", color = \"orange\")  \n\nWarning: Removed 27 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n# adding caption\n#| fig-cap: \"Scatter plot showing the relationship between 9am Temperature and 3pm Temperature across different Australian locations. The x-axis represents the 9am Temperature, while the y-axis represents the 3pm Temperature. Each point is colored according to the respective location\" \n\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point() + \n  labs(x = \"9am Temperature\", y = \"3pm Temperature\", title = \"Weather in 3 Australian Locations\", color = \"orange\")  + \n  theme(plot.title = element_text(hjust = 0.5))\n\nWarning: Removed 27 rows containing missing values or values outside the scale range\n(`geom_point()`).",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Effective Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-wrangling.html",
    "href": "ica/ica-wrangling.html",
    "title": "\n15  Wrangling Viz\n",
    "section": "",
    "text": "# Load tidyverse & data\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nelections &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\nexercise 1\n\nelections_small &lt;- elections |&gt; \n  select(state_name, county_name, total_votes_20, repub_pct_20, dem_pct_20, total_votes_16, dem_pct_16)\n\n\nhead(elections_small)\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16\n1          24661      23.96\n2          94090      19.57\n3          10390      46.66\n4           8748      21.42\n5          25384       8.47\n6           4701      75.09\n\n\n\nhead(elections)\n\n  state_name state_abbr historical    county_name county_fips total_votes_20\n1    Alabama         AL        red Autauga County        1001          27770\n2    Alabama         AL        red Baldwin County        1003         109679\n3    Alabama         AL        red Barbour County        1005          10518\n4    Alabama         AL        red    Bibb County        1007           9595\n5    Alabama         AL        red  Blount County        1009          27588\n6    Alabama         AL        red Bullock County        1011           4613\n  repub_pct_20 dem_pct_20 winner_20 total_votes_16 repub_pct_16 dem_pct_16\n1        71.44      27.02     repub          24661        73.44      23.96\n2        76.17      22.41     repub          94090        77.35      19.57\n3        53.45      45.79     repub          10390        52.27      46.66\n4        78.43      20.70     repub           8748        76.97      21.42\n5        89.57       9.57     repub          25384        89.85       8.47\n6        24.84      74.70       dem           4701        24.23      75.09\n  winner_16 total_votes_12 repub_pct_12 dem_pct_12 winner_12 total_population\n1     repub          23909        72.63      26.58     repub            54907\n2     repub          84988        77.39      21.57     repub           187114\n3     repub          11459        48.34      51.25       dem            27321\n4     repub           8391        73.07      26.22     repub            22754\n5     repub          23980        86.49      12.35     repub            57623\n6       dem           5318        23.51      76.31       dem            10746\n  percent_white percent_black percent_asian percent_hispanic per_capita_income\n1            76            18             1                2             24571\n2            83             9             1                4             26766\n3            46            46             0                5             16829\n4            75            22             0                2             17427\n5            88             1             0                8             20730\n6            22            71             0                6             18628\n  median_rent median_age\n1         668       37.5\n2         693       41.5\n3         382       38.3\n4         351       39.4\n5         403       39.6\n6         276       39.6\n\n\nexercise 2\n\n#Keep only data on counties in Hawaii\n elections_small |&gt;\n filter(state_name == \"Hawaii\")\n\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1     Hawaii   Hawaii County          87814        30.63      66.88\n2     Hawaii Honolulu County         382114        35.66      62.51\n3     Hawaii    Kauai County          33497        34.58      63.36\n4     Hawaii     Maui County          71044        31.14      66.59\n  total_votes_16 dem_pct_16\n1          64865      63.61\n2         285683      61.48\n3          26335      62.49\n4          51942      64.45\n\n\n\n# This makes it possible for us to filter two variables at once\n elections_small |&gt; \n  filter(state_name %in% c(\"Hawaii\", \"Delaware\"))\n\n  state_name       county_name total_votes_20 repub_pct_20 dem_pct_20\n1   Delaware       Kent County          87025        47.12      51.19\n2   Delaware New Castle County         287633        30.72      67.81\n3   Delaware     Sussex County         129352        55.07      43.82\n4     Hawaii     Hawaii County          87814        30.63      66.88\n5     Hawaii   Honolulu County         382114        35.66      62.51\n6     Hawaii      Kauai County          33497        34.58      63.36\n7     Hawaii       Maui County          71044        31.14      66.59\n  total_votes_16 dem_pct_16\n1          74253      44.91\n2         261468      62.30\n3         105814      37.17\n4          64865      63.61\n5         285683      61.48\n6          26335      62.49\n7          51942      64.45\n\n\n\n# The important variable here is the repub_pct 20 percentage\nelections_small |&gt;\n filter(repub_pct_20 &gt; \"93.97\")\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas  Borden County            416        95.43       3.85\n2      Texas    King County            159        94.97       5.03\n3      Texas Roberts County            550        96.18       3.09\n  total_votes_16 dem_pct_16\n1            365       8.49\n2            159       3.14\n3            550       3.64\n\n\n\n# The important variable here is the repub_pct 20 percentage\nelections_small |&gt;\n filter(repub_pct_20 &gt;= 93.97)\n\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Montana Garfield County            813        93.97       5.04\n2      Texas   Borden County            416        95.43       3.85\n3      Texas     King County            159        94.97       5.03\n4      Texas  Roberts County            550        96.18       3.09\n  total_votes_16 dem_pct_16\n1            715       4.76\n2            365       8.49\n3            159       3.14\n4            550       3.64\n\n\nKeep only data on counties in Texas where the Democrat got more than 65% of the vote in 2020 # Do this 2 ways. # Method 1: 2 filters with 1 condition each #elections_small |&gt; # filter() |&gt; # filter()\n\n16 Method 2: 1 filter with 2 conditions\n#elections_small |&gt; # filter(, )\n\n#Method 1\nelections_small |&gt;\n  filter(state_name == \"Texas\") |&gt;\n filter(dem_pct_20 &gt; 65)\n\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas  El Paso County         267215        31.56      66.66\n2      Texas Presidio County           2217        32.52      65.99\n3      Texas   Travis County         610349        26.43      71.41\n4      Texas   Zavala County           4379        34.03      65.40\n  total_votes_16 dem_pct_16\n1         210458      69.14\n2           2203      66.18\n3         462511      66.26\n4           3390      77.67\n\n\n\n#Method 2\nelections_small |&gt; \n filter(state_name== \"Texas\", dem_pct_20 &gt; 65)\n\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas  El Paso County         267215        31.56      66.66\n2      Texas Presidio County           2217        32.52      65.99\n3      Texas   Travis County         610349        26.43      71.41\n4      Texas   Zavala County           4379        34.03      65.40\n  total_votes_16 dem_pct_16\n1         210458      69.14\n2           2203      66.18\n3         462511      66.26\n4           3390      77.67\n\n\nExercise 3\nArrange the counties in elections_small from lowest to highest percentage of 2020 Republican support\n\n# Arrange the counties in elections_small from lowest to highest percentage of 2020 Republican support\n# Print out just the first 6 rows\n# elections_small |&gt; \n#   arrange(___) |&gt; \n#   head()\n\nelections_small |&gt; \n  arrange(county_name) |&gt;\n  arrange(desc(repub_pct_20)) |&gt;\n head(6)\n\n  state_name      county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas   Roberts County            550        96.18       3.09\n2      Texas    Borden County            416        95.43       3.85\n3      Texas      King County            159        94.97       5.03\n4    Montana  Garfield County            813        93.97       5.04\n5      Texas Glasscock County            653        93.57       5.97\n6   Nebraska     Grant County            402        93.28       4.98\n  total_votes_16 dem_pct_16\n1            550       3.64\n2            365       8.49\n3            159       3.14\n4            715       4.76\n5            602       5.65\n6            394       5.08",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Wrangling Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-dates.html",
    "href": "ica/ica-dates.html",
    "title": "\n16  Dates Viz\n",
    "section": "",
    "text": "library(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\n\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\n\n\nAttaching package: 'mosaic'\n\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\ndata(\"Birthdays\")\n\n# Exercise 5: Warming up\ndays_per_state &lt;- Birthdays %&gt;% group_by(state) %&gt;% summarise(days = n())\ntotal_births &lt;- Birthdays %&gt;% summarise(total = sum(births))\nbirths_per_state &lt;- Birthdays %&gt;% group_by(state) %&gt;% summarise(total = sum(births)) %&gt;% arrange(total)\n\n# Exercise 6: Daily births dataset and plot\ndaily_births &lt;- Birthdays %&gt;% group_by(date, wday) %&gt;% summarise(total_births = sum(births))\n\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n\nggplot(daily_births, aes(x = date, y = total_births, color = wday)) +\n  geom_line()\n\n\n\n\n\n\n# Exercise 7a: Monthly births and plot\nmonthly_births &lt;- Birthdays %&gt;%\n  group_by(year, month) %&gt;%\n  summarise(total_births = sum(births)) %&gt;%\n  mutate(month = factor(month.abb[month], levels = month.abb),\n         year_month = as.Date(paste(year, month, \"1\"), \"%Y %b %d\"))\n\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n\nggplot(monthly_births, aes(x = year_month, y = total_births)) +\n  geom_line()\n\n\n\n\n\n\n# Exercise 7b: Weekly births per state in 1988 (weeks 1–52) and plot\nweekly_births_state1988 &lt;- Birthdays %&gt;%\n  filter(year == 1988) %&gt;%\n  mutate(week = week(date)) %&gt;%\n  filter(week != 53) %&gt;%\n  group_by(state, week) %&gt;%\n  summarise(total_births = sum(births))\n\n`summarise()` has grouped output by 'state'. You can override using the\n`.groups` argument.\n\nggplot(weekly_births_state1988, aes(x = week, y = total_births, color = state, group = state)) +\n  geom_line()\n\n\n\n\n\n\n# Exercise 7c: Weekly births for MN and LA in 1988 and plot\nweekly_MN_LA1988 &lt;- Birthdays %&gt;%\n  filter(year == 1988, state %in% c(\"MN\", \"LA\")) %&gt;%\n  mutate(week = week(date)) %&gt;%\n  filter(week != 53) %&gt;%\n  group_by(state, week) %&gt;%\n  summarise(total_births = sum(births))\n\n`summarise()` has grouped output by 'state'. You can override using the\n`.groups` argument.\n\nggplot(weekly_MN_LA1988, aes(x = week, y = total_births, color = state, group = state)) +\n  geom_line()\n\n\n\n\n\n\n# Exercise 8a: Massachusetts births in 1979 sorted\nma_1979 &lt;- Birthdays %&gt;%\n  filter(state == \"MA\", year == 1979) %&gt;%\n  arrange(desc(births))\n\n# Exercise 8b: Top 5 states by births from 1979-09-09 to 1979-09-12\ntop5_states_sep79 &lt;- Birthdays %&gt;%\n  filter(date &gt;= as.Date(\"1979-09-09\") & date &lt;= as.Date(\"1979-09-12\")) %&gt;%\n  group_by(state) %&gt;%\n  summarise(total_births = sum(births)) %&gt;%\n  arrange(desc(total_births)) %&gt;%\n  slice_head(n = 5)",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Dates Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-reshaping.html",
    "href": "ica/ica-reshaping.html",
    "title": "\n17  Reshaping Viz\n",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nsleep_wide &lt;- read.csv(\"https://mac-stat.github.io/data/sleep_wide.csv\")\n\nhead(sleep_wide)\n\n  Subject  day_0  day_1  day_2  day_3  day_4  day_5  day_6  day_7  day_8  day_9\n1     308 249.56 258.70 250.80 321.44 356.85 414.69 382.20 290.15 430.59 466.35\n2     309 222.73 205.27 202.98 204.71 207.72 215.96 213.63 217.73 224.30 237.31\n3     310 199.05 194.33 234.32 232.84 229.31 220.46 235.42 255.75 261.01 247.52\n4     330 321.54 300.40 283.86 285.13 285.80 297.59 280.24 318.26 305.35 354.05\n5     331 287.61 285.00 301.82 320.12 316.28 293.32 290.08 334.82 293.75 371.58\n6     332 234.86 242.81 272.96 309.77 317.46 310.00 454.16 346.83 330.30 253.86\n\n\n\n\"units of observation here are subjects\"\n\n[1] \"units of observation here are subjects\"\n\n\n\n\"first few rows have to have subject, day and reaction time\"\n\n[1] \"first few rows have to have subject, day and reaction time\"\n\n\n\nsleep_wide |&gt;\n  pivot_longer(cols =c(day_0, day_1, day_2, day_3, day_4, day_5, day_6, day_7, day_8, day_9),\n              names_to = \"day\",\n              values_to = \"reaction_time\")\n\n# A tibble: 180 × 3\n   Subject day   reaction_time\n     &lt;int&gt; &lt;chr&gt;         &lt;dbl&gt;\n 1     308 day_0          250.\n 2     308 day_1          259.\n 3     308 day_2          251.\n 4     308 day_3          321.\n 5     308 day_4          357.\n 6     308 day_5          415.\n 7     308 day_6          382.\n 8     308 day_7          290.\n 9     308 day_8          431.\n10     308 day_9          466.\n# ℹ 170 more rows\n\n\n\nsleep_wide |&gt;\n  pivot_longer(cols = c(day_0, day_1, day_2, day_3, day_4, day_5, day_6, day_7, day_8, day_9),\n               names_to = \"day\",\n               values_to = \"reactiontime\",\n               names_prefix = \"day_\")\n\n# A tibble: 180 × 3\n   Subject day   reactiontime\n     &lt;int&gt; &lt;chr&gt;        &lt;dbl&gt;\n 1     308 0             250.\n 2     308 1             259.\n 3     308 2             251.\n 4     308 3             321.\n 5     308 4             357.\n 6     308 5             415.\n 7     308 6             382.\n 8     308 7             290.\n 9     308 8             431.\n10     308 9             466.\n# ℹ 170 more rows",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Reshaping Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-joining.html",
    "href": "ica/ica-joining.html",
    "title": "\n18  Joining Viz\n",
    "section": "",
    "text": "library(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Data setup\nstudents_2 &lt;- data.frame(\n  student = c(\"D\", \"E\", \"F\"),\n  class   = c(\"COMP 101\", \"BIOL 101\", \"POLI 101\")\n)\nenrollments_2 &lt;- data.frame(\n  course     = c(\"ART 101\", \"BIOL 101\", \"COMP 101\"),\n  enrollment = c(18, 20, 19)\n)\n\n# Part a: join on class == course\nstudents_2 |&gt; \n  left_join(enrollments_2, by = c(\"class\" = \"course\"))\n\n  student    class enrollment\n1       D COMP 101         19\n2       E BIOL 101         20\n3       F POLI 101         NA\n\n# Part b (explicitly using join_by, same result)\nstudents_2 |&gt; \n  left_join(enrollments_2, join_by(class == course))\n\n  student    class enrollment\n1       D COMP 101         19\n2       E BIOL 101         20\n3       F POLI 101         NA\n\n# Part c: setup students_3 / enrollments_3\nstudents_3 &lt;- data.frame(\n  student = c(\"Y\", \"Y\", \"Z\", \"Z\"),\n  class   = c(\"COMP 101\", \"BIOL 101\", \"POLI 101\", \"COMP 101\"),\n  grade   = c(\"B\", \"S\", \"C\", \"A\")\n)\nenrollments_3 &lt;- data.frame(\n  class      = c(\"ART 101\", \"BIOL 101\",\"COMP 101\"),\n  grade      = c(\"B\", \"A\", \"A-\"),\n  enrollment = c(20, 18, 19)\n)\n\n# Part c: (incorrect join; no common by — will error)\n# students_3 |&gt; left_join(enrollments_3)\n\n# Part d: correct join on class\nstudents_3 |&gt; \n  left_join(enrollments_3, by = \"class\")\n\n  student    class grade.x grade.y enrollment\n1       Y COMP 101       B      A-         19\n2       Y BIOL 101       S       A         18\n3       Z POLI 101       C    &lt;NA&gt;         NA\n4       Z COMP 101       A      A-         19",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Joining Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-factors.html",
    "href": "ica/ica-factors.html",
    "title": "\n19  Factor Viz\n",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n# Get rid of some duplicate rows!\ngrades &lt;- read.csv(\"https://mac-stat.github.io/data/grades.csv\") |&gt; \n  distinct(sid, sessionID, .keep_all = TRUE)\n\n# Check it out\nhead(grades)\n\n     sid grade   sessionID\n1 S31185    D+ session1784\n2 S31185    B+ session1785\n3 S31185    A- session1791\n4 S31185    B+ session1792\n5 S31185    B- session1794\n6 S31185    C+ session1795\n\n\n\ngrade_distribution &lt;- grades |&gt; \n  count(grade)\n\nprint(grade_distribution)\n\n   grade    n\n1      A 1506\n2     A- 1381\n3     AU   27\n4      B  804\n5     B+ 1003\n6     B-  330\n7      C  137\n8     C+  167\n9     C-   52\n10     D   18\n11    D+    8\n12    D-    6\n13    NC   17\n14     S  388\n\n\n\n#Check out a column plot of the number of times each grade was assigned during the study period. This is similar to a bar plot, but where we define the height of a bar according to variable in our dataset.\n\n\ngrade_distribution |&gt; \n  ggplot(aes(x = grade, y = n)) +\n    geom_col()\n\n\n\n\n\n\n\n\n#The order of the grades is goofy! Construct a new column plot, manually reordering the grades from high (A) to low (NC) with “S” and “AU” at the end:\n\n grade_distribution |&gt;\n mutate(grade = fct_relevel(grade, c(\"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"NC\", \"S\", \"AU\"))) |&gt;\n  ggplot(aes(x = grade, y = n)) +\n  geom_col()\n\n\n\n\n\n\n\n\n#Construct a new column plot, reordering the grades in ascending frequency (i.e. how often the grades were assigned):\n\ngrade_distribution |&gt;\n mutate(grade = fct_reorder(grade,n )) |&gt;\n  ggplot(aes(x = grade, y = n)) +\n   geom_col()\n\n\n\n\n\n\n\n\n#Construct a new column plot, reordering the grades in descending frequency (i.e. how often the grades were assigned):\n\ngrade_distribution |&gt;\nmutate(grade = fct_reorder(grade, n, .desc = TRUE)) |&gt;\nggplot(aes(x = grade, y = n)) +\ngeom_col()\n\n\n\n\n\n\n\n\ngrade_distribution |&gt;\nmutate(grade = fct_reorder(grade, n, .desc  = TRUE)) |&gt;\nggplot(aes(x = grade, y = n)) +\ngeom_col()\n\n\n\n\n\n\n\n\n#*Exercise 2* \n#It may not be clear what “AU” and “S” stand for. Construct a new column plot that renames these levels “Audit” and “Satisfactory”, while keeping the other grade labels the same and in a meaningful order:\n\ngrade_distribution |&gt;\nmutate(grade = fct_recode(grade, \"Audit\" = \"AU\", \n                            \"Satisfactory\" = \"S\"))|&gt;\nmutate(grade = fct_reorder(grade, n, )) |&gt;  # Multiple pieces go into the last 2 blanks\nggplot(aes(x = grade, y = n)) +\ngeom_col()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Factor Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-strings.html",
    "href": "ica/ica-strings.html",
    "title": "\n20  Strings Viz\n",
    "section": "",
    "text": "library(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\nlibrary(stringr)\n\ncourses &lt;- read.csv(\"https://mac-stat.github.io/data/registrar.csv\")\n\n# Exercise 1: Time slots\ntime_slots &lt;- courses %&gt;%\n  count(days, time, name = \"classes_offered\") %&gt;%\n  arrange(desc(classes_offered)) %&gt;%\n  slice_head(n = 6)\ntime_slots\n\n   days             time classes_offered\n1 M W F 10:50 - 11:50 am              76\n2  T R   9:40 - 11:10 am              71\n3 M W F  9:40 - 10:40 am              68\n4 M W F   1:10 - 2:10 pm              66\n5  T R    3:00 - 4:30 pm              62\n6  T R    1:20 - 2:50 pm              59\n\n# Exercise 2: Prep the data\ncourses_clean &lt;- courses %&gt;%\n  separate(avail_max, into = c(\"avail\", \"max\"), sep = \" / \") %&gt;%\n  mutate(avail = as.numeric(avail),\n         max   = as.numeric(max),\n         enroll = max - avail) %&gt;%\n  separate(number, into = c(\"dept\", \"number\", \"section\"), sep = \"[ -]\")\n\n# Exercise 3: Courses by department\ntop_departments &lt;- courses_clean %&gt;%\n  count(dept, name = \"sections_offered\") %&gt;%\n  arrange(desc(sections_offered)) %&gt;%\n  slice_head(n = 6)\nlong_titles &lt;- courses_clean %&gt;%\n  group_by(dept) %&gt;%\n  summarise(avg_title_length = mean(nchar(name)), .groups = \"drop\") %&gt;%\n  arrange(desc(avg_title_length)) %&gt;%\n  slice_head(n = 6)\n\n# Exercise 4a: Courses taught by Alicia Johnson\nalicia_courses &lt;- courses_clean %&gt;%\n  filter(instructor == \"Alicia Johnson\")\n\n# Exercise 4b: STAT courses dataset\nstat &lt;- courses_clean %&gt;%\n  filter(dept == \"STAT\") %&gt;%\n  mutate(name = str_remove(name, \"^Introduction to \"),\n         name = str_replace(name, \"Statistical\", \"Stat\"),\n         start_numeric = str_extract(time, \"^\\\\d{1,2}:\\\\d{2}\"),\n         suffix = str_extract(time, \"(?i)(am|pm)$\"),\n         start_time = paste(start_numeric, suffix)) %&gt;%\n  select(number, name, start_time, enroll)\n\n# Exercise 5: More cleaning\nenrollments &lt;- courses_clean %&gt;%\n  filter(!(dept %in% c(\"PE\", \"INTD\")),\n         !(dept == \"MUSI\" & as.numeric(number) &lt; 100),\n         !(dept == \"THDA\" & as.numeric(number) &lt; 100),\n         !str_detect(name, \"\\\\bLab\\\\b\"))",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Strings Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-importing_data.html",
    "href": "ica/ica-importing_data.html",
    "title": "\n21  Importing Data\n",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nimdb_messy &lt;- read_csv(\"~/Documents/GitHub/portfolio-kpmhere/data/imdb_5000_messy.csv\")\n\nNew names:\nRows: 5043 Columns: 29\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(12): color, director_name, actor_2_name, genres, actor_1_name, movie_ti... dbl\n(17): ...1, num_critic_for_reviews, duration, director_facebook_likes, a...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\n\n\ngetwd()\n\n[1] \"/Users/kupakwashemhere/Documents/GitHub/portfolio-kpmhere/ica\"\n\n\n\nimdb_temp &lt;- read_csv(\"../data/imdb_5000_messy.csv\")\n\nNew names:\nRows: 5043 Columns: 29\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(12): color, director_name, actor_2_name, genres, actor_1_name, movie_ti... dbl\n(17): ...1, num_critic_for_reviews, duration, director_facebook_likes, a...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Importing Data</span>"
    ]
  }
]